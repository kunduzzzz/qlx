{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7f90ffd6-553f-4920-a2f4-633d04085506",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import pickle\n",
    "import os\n",
    "\n",
    "# Page configuration\n",
    "st.set_page_config(page_title=\"Prostate Cancer Risk Calculator\", layout=\"wide\")\n",
    "st.title(\"Prostate Cancer Risk Assessment\")\n",
    "st.markdown(\"\"\"\n",
    "**Clinical Utility**: This tool predicts prostate cancer risk based on clinicopathological parameters.\n",
    "\"\"\")\n",
    "\n",
    "# Load model\n",
    "current_dir = os.path.dirname(os.path.abspath(__file__))\n",
    "model_path = os.path.join(current_dir, 'xgboost_model.pkl')\n",
    "with open(model_path, 'rb') as file:\n",
    "    model = pickle.load(file)\n",
    "\n",
    "# Sidebar input features\n",
    "with st.sidebar:\n",
    "    st.header(\"Patient Parameters\")\n",
    "    \n",
    "    st.subheader(\"Tumor Characteristics\")\n",
    "    T = st.slider(\"T Stage\", min_value=1, max_value=4, value=2, step=1,\n",
    "                 help=\"T1: Non-palpable, T2: Organ-confined, T3: Extracapsular extension, T4: Invasion of adjacent structures\")\n",
    "    N = st.slider(\"N Stage\", min_value=0, max_value=3, value=1, step=1,\n",
    "                 help=\"N0: No regional lymph node metastasis, N1: Regional lymph node metastasis\")\n",
    "    \n",
    "    st.subheader(\"Laboratory Values\")\n",
    "    PSA_density = st.slider(\"PSA Density (ng/mL/mL)\", min_value=0.0, max_value=10.0, value=0.5, step=0.1,\n",
    "                          help=\"Serum PSA divided by prostate volume\")\n",
    "    ALP = st.slider(\"ALP (U/L)\", min_value=0, max_value=1000, value=100, step=10,\n",
    "                  help=\"Alkaline phosphatase level\")\n",
    "    \n",
    "    st.subheader(\"Performance Status\")\n",
    "    ECOG_PS = st.slider(\"ECOG PS\", min_value=0, max_value=4, value=1, step=1,\n",
    "                      help=\"0: Asymptomatic, 1: Symptomatic but ambulatory, 2: <50% in bed, 3: >50% in bed, 4: Bedbound\")\n",
    "\n",
    "# Create input dataframe\n",
    "input_data = pd.DataFrame({\n",
    "    'N': [N],\n",
    "    'ECOG_PS': [ECOG_PS],\n",
    "    'ALP': [ALP],\n",
    "    'T': [T],\n",
    "    'PSA_density': [PSA_density]\n",
    "})\n",
    "\n",
    "# Prediction and results\n",
    "col1, col2 = st.columns([1, 1])\n",
    "\n",
    "with col1:\n",
    "    if st.button(\"Calculate Risk\"):\n",
    "        # Probability prediction\n",
    "        prob = model.predict_proba(input_data)[0][1]\n",
    "        risk_level = \"High\" if prob >= 0.6 else \"Intermediate\" if prob >= 0.3 else \"Low\"\n",
    "        \n",
    "        # Display results\n",
    "        st.subheader(\"Risk Assessment\")\n",
    "        st.metric(label=\"Probability\", value=f\"{prob:.1%}\")\n",
    "        \n",
    "        st.markdown(f\"\"\"\n",
    "        **Risk Category**: {risk_level}\n",
    "        \n",
    "        **Clinical Considerations**:\n",
    "        - High risk: Consider advanced imaging and multidisciplinary evaluation\n",
    "        - Intermediate risk: Standard treatment protocols\n",
    "        - Low risk: Active surveillance may be appropriate\n",
    "        \"\"\")\n",
    "\n",
    "with col2:\n",
    "    if 'prob' in locals():\n",
    "        st.subheader(\"Risk Factors\")\n",
    "        st.markdown(f\"\"\"\n",
    "        Key contributing factors:\n",
    "        - T stage: {'Significant' if T > 2 else 'Limited'} impact\n",
    "        - N status: {'Positive' if N > 0 else 'Negative'} nodes\n",
    "        - PSA density: {'Elevated' if PSA_density > 0.7 else 'Normal'}\n",
    "        \"\"\")\n",
    "        \n",
    "        # Visual indicator\n",
    "        risk_factors = {\n",
    "            'T Stage': T/4,\n",
    "            'N Status': N/3,\n",
    "            'PSA Density': min(PSA_density/2, 1),\n",
    "            'ALP': min(ALP/500, 1),\n",
    "            'ECOG PS': ECOG_PS/4\n",
    "        }\n",
    "        st.bar_chart(pd.DataFrame.from_dict(\n",
    "            {'Risk Contribution': risk_factors}), \n",
    "            height=300\n",
    "        )\n",
    "\n",
    "# Guidelines and references\n",
    "st.markdown(\"---\")\n",
    "st.info(\"\"\"\n",
    "**Clinical Guidelines**:\n",
    "- High risk: Bone scan + pelvic MRI recommended\n",
    "- NCCN risk stratification applies\n",
    "- Consider germline testing for high-risk patients\n",
    "\"\"\")\n",
    "\n",
    "# Disclaimer\n",
    "st.warning(\"\"\"\n",
    "**Disclaimer**:\n",
    "1. For clinical decision support only\n",
    "2. Requires validation with clinical assessment\n",
    "3. Not for diagnostic purposes\n",
    "4. Model performance: AUC 0.85 (95% CI 0.82-0.88)\n",
    "\"\"\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
